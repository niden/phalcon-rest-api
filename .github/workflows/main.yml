name: Testing Suite

on: [push, pull_request]

env:
  DATA_API_MYSQL_HOST: '127.0.0.1'
  DATA_API_REDIS_HOST: '127.0.0.1'

jobs:
  run:
    runs-on: ubuntu-latest
    name: Workflow - PHP-${{ matrix.php }}

    services:
      mysql:
        image: mysql:5.7
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_USER: phalcon
          MYSQL_DATABASE: phalcon_api
          MYSQL_PASSWORD: secret
      redis:
        image: redis:5-alpine
        ports:
          - "6379:6379"

    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1' ]

    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: mbstring, intl, json, phalcon-5.0.0RC4
          coverage: xdebug

      - name: Init Database
        run: |
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS `phalcon_api`;'

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHPCS
        if: always()
        run: vendor/bin/phpcs

      - name: Run migrations
        if: always()
        run: |
          vendor/bin/phinx migrate

      - name: Run tests
        if: always()
        run: |
          sudo php -S 0.0.0.0 -t ./.htrouter.php &
          vendor/bin/codecept build
          vendor/bin/codecept run unit --coverage-xml=unit-coverage.xml
          vendor/bin/codecept run integration --coverage-xml=integration-coverage.xml
          vendor/bin/codecept run cli --coverage-xml=cli-coverage.xml
          vendor/bin/codecept run api --coverage-xml=api-coverage.xml
